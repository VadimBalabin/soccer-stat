{"version":3,"sources":["store/reducers/competitionSlice.js","store/reducers/competitionsSlice.js","store/reducers/matchesSlice.js","store/reducers/teamSlice.js","store/reducers/teamsSlice.js","store/store.js","components/Sidebar/Sidebar.jsx","components/PageContainer/PageContainer.jsx","components/DateRangeBox.jsx","components/SeasonList.jsx","components/MatchList.jsx","components/TeamList.jsx","services/axios.js","utils/api/api.js","helpers/openNotification.js","store/actions/competitions-action.js","store/actions/competition-action.js","store/actions/teams-action.js","store/actions/team-action.js","store/actions/matches-action.js","utils/getDateRange.js","components/TabMenu.jsx","images/no-emblem.jfif","components/DescriptionPane.jsx","components/Competition/CompetitionContent.jsx","components/Competition/Competition.jsx","components/Team/TeamContent.jsx","components/CompetitionList.jsx","components/SquadList.jsx","helpers/formatDt.js","components/Team/Team.jsx","components/CardMenu.jsx","components/CompetitionCard.jsx","components/TeamCard.jsx","components/CardList/CardLisView.jsx","components/SearchBox.jsx","components/Heading.jsx","components/CardList/CardList.jsx","App.js","index.js"],"names":["competitionSlice","createSlice","name","initialState","fetchingState","errorText","code","area","emblemUrl","currentSeason","seasons","teams","reducers","competitionSetData","state","payload","data","competitionFetching","competitionFetchingError","actions","comptetitionReducer","reducer","competitionsSlice","isFetching","loaded","competitionsFetching","competitionsSetData","competitionsLoaded","comptetitionsReducer","matcheSlice","matchesSetData","matchesFetching","matchesFetchingError","matchesReducer","teamSlice","activeCompetitions","address","crestUrl","email","founded","phone","shortName","squad","venue","website","teamSetData","teamFetching","teamFetchingError","teamReducer","teamsSlice","teamsSetData","teamsFetching","teamsLoaded","teamsReducer","configureStore","competition","competitions","team","matches","middleware","thunk","Sider","Layout","Sidebar","history","useHistory","className","width","style","background","direction","marginTop","padding","size","placement","title","icon","AppstoreOutlined","shape","type","onClick","push","TeamOutlined","Content","PageContainer","children","marginLeft","RangePicker","DatePicker","DateRangeBox","value","onChange","defaultValue","SeasonList","loading","dataSource","renderItem","item","Item","column","label","startDate","endDate","currentMatchday","winner","to","id","MatchList","pagination","defaultPageSize","homeTeam","src","ensignUrl","awayTeam","status","color","score","fullTime","ClockCircleOutlined","season","TeamList","Meta","avatar","description","align","Text","href","strong","axios","defaults","baseURL","headers","common","window","competitionApi","get","teamApi","matchApi","resource","filter","openNotification","text","duration","notification","message","competitionsAction","dispatch","then","catch","err","response","error","toString","finally","competitionAction","Promise","all","teamsAction","teamAction","matchesAction","search","getDateRange","urlParams","URLSearchParams","moment","TabPane","Tabs","TabMenu","active","tabs","extra","activeKey","tabBarExtraContent","map","tab","key","toUpperCase","count","DescriptionPane","avatarUrl","subTitle","imageWidth","paragraph","rows","round","ghost","onBack","back","noEmblem","justify","flex","xs","md","lg","xl","preview","CompetitionContent","labelStyle","fontWeight","Competition","useParams","useLocation","useDispatch","useState","curTab","setCurTab","tabData","setTabData","useSelector","s","matchFetchingState","competitionFetchingState","refreshMatches","setRefreshMatshes","dateRangeRef","useRef","cardComponent","extraTabContent","dt","str","from","current","replace","useEffect","tabsData","variant","length","createElement","TeamContent","sm","xxl","CompetitionList","e","preventDefault","SquadList","position","countryOfBirth","dateOfBirth","Intl","DateTimeFormat","weekday","year","month","day","format","Date","role","Team","fetchingMatches","teamFetchingState","CardComponent","plan","CardMenu","changeTab","selectedKeys","mode","Card","CompetitionCard","handleClick","hoverable","bordered","TeamCard","CardListView","onOpenCard","grid","gutter","minWidth","margin","SearchBox","handleSearch","placeholder","allowClear","Title","Typography","Heading","heading","CardListBase","pathname","setHeading","setTab","Array","keys","list","setList","writeSearchValueInUrl","val","prefix","target","trim","filteredData","RegExp","test","slice","ErrorBoundary","Alert","App","exact","path","component","CardList","ReactDOM","render","StrictMode","store","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.6f058fc2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  fetchingState: 'none',\r\n  errorText: '',\r\n  name: '',\r\n  code: '',\r\n  area: {\r\n    name: ''\r\n  },\r\n  emblemUrl: '',\r\n  currentSeason: [],\r\n  seasons: [],\r\n  teams: [],\r\n}\r\n\r\nconst competitionSlice = createSlice({\r\n  name: 'COMPETITION',\r\n  initialState,\r\n  reducers: {\r\n    competitionSetData: (state, { payload }) => {\r\n      const { name, code, area, emblemUrl, currentSeason, seasons } = payload.data;\r\n      const { teams } = payload.teams\r\n\r\n      return {\r\n        ...state,\r\n        name,\r\n        code,\r\n        area,\r\n        emblemUrl,\r\n        currentSeason,\r\n        seasons,\r\n        teams,\r\n        fetchingState: 'success'\r\n      }\r\n    },\r\n    competitionFetching: (state) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'loading',\r\n      }\r\n    },\r\n    competitionFetchingError: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'failed',\r\n        errorText: payload.errorText\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { competitionSetData, competitionFetching, competitionFetchingError } = competitionSlice.actions;\r\nexport const comptetitionReducer = competitionSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  data: [],\r\n}\r\n\r\nconst competitionsSlice = createSlice({\r\n  name: 'COMPETITIONS',\r\n  initialState,\r\n  reducers: {\r\n    competitionsFetching: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching\r\n      }\r\n    },\r\n    competitionsSetData: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        data: payload.data\r\n      }\r\n    },\r\n    competitionsLoaded: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const { competitionsFetching, competitionsSetData, competitionsLoaded } = competitionsSlice.actions;\r\nexport const comptetitionsReducer = competitionsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  fetchingState: 'none',\r\n  errorText: '',\r\n  data: [],\r\n}\r\n\r\nconst matcheSlice = createSlice({\r\n  name: 'MATCHES',\r\n  initialState,\r\n  reducers: {\r\n    matchesSetData: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        data: payload.data,\r\n        fetchingState: 'success'\r\n      }\r\n    },\r\n    matchesFetching: (state) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'loading',\r\n      }\r\n    },\r\n    matchesFetchingError: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'failed',\r\n        errorText: payload.errorText\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const matchesReducer = matcheSlice.reducer;\r\nexport const { matchesSetData, matchesFetching, matchesFetchingError } = matcheSlice.actions;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  fetchingState: 'none',\r\n  errorText: '',\r\n  activeCompetitions: [],\r\n  address: '',\r\n  area: {\r\n    name: ''\r\n  },\r\n  crestUrl: '',\r\n  email: '',\r\n  founded: '',\r\n  name: '',\r\n  phone: '',\r\n  shortName: '',\r\n  squad: [],\r\n  venue: '',\r\n  website: ''\r\n}\r\n\r\nconst teamSlice = createSlice({\r\n  name: 'TEAM',\r\n  initialState,\r\n  reducers: {\r\n    teamSetData: (state, { payload }) => {\r\n      const {\r\n        activeCompetitions,\r\n        address,\r\n        area,\r\n        crestUrl,\r\n        email,\r\n        founded,\r\n        name,\r\n        phone,\r\n        shortName,\r\n        squad,\r\n        venue,\r\n        website\r\n      } = payload.data;\r\n\r\n      return {\r\n        ...state,\r\n        activeCompetitions,\r\n        address,\r\n        area,\r\n        crestUrl,\r\n        email,\r\n        founded,\r\n        name,\r\n        phone,\r\n        shortName,\r\n        squad,\r\n        venue,\r\n        website,\r\n        fetchingState: 'success'\r\n      }\r\n    },\r\n    teamFetching: (state) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'loading',\r\n      }\r\n    },\r\n    teamFetchingError: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        fetchingState: 'failed',\r\n        errorText: payload.errorText\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const { teamSetData, teamFetching, teamFetchingError } = teamSlice.actions;\r\nexport const teamReducer = teamSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  data: [],\r\n}\r\n\r\nconst teamsSlice = createSlice({\r\n  name: 'TEAMS',\r\n  initialState,\r\n  reducers: {\r\n    teamsSetData: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        data: payload.data,\r\n      }\r\n    },\r\n    teamsFetching: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    },\r\n    teamsLoaded: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const { teamsSetData, teamsFetching, teamsLoaded } = teamsSlice.actions;\r\nexport const teamsReducer = teamsSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport { comptetitionReducer, comptetitionsReducer, teamReducer, teamsReducer, matchesReducer } from \"./reducers\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    competition: comptetitionReducer,\r\n    competitions: comptetitionsReducer,\r\n    team: teamReducer,\r\n    teams: teamsReducer,\r\n    matches: matchesReducer\r\n  },\r\n  middleware: [thunk]\r\n})","import { Layout, Button, Space, Tooltip } from 'antd';\r\nimport { TeamOutlined, AppstoreOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const Sidebar = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={56} style={{ background: 'none' }}>\r\n      <Space\r\n        direction=\"vertical\"\r\n        style={{ marginTop: 64, padding: '0px 8px' }}\r\n        size=\"large\"\r\n      >\r\n        <Tooltip placement=\"right\" title=\"COMPETITIONS\">\r\n          <Button\r\n            icon={<AppstoreOutlined />}\r\n            shape=\"circle\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={() => history.push('/')}\r\n            className=\"menu-button\"\r\n          />\r\n        </Tooltip>\r\n        <Tooltip placement=\"right\" title=\"TEAMS\">\r\n          <Button\r\n            icon={<TeamOutlined />}\r\n            shape=\"circle\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={() => history.push('/teams')}\r\n            className=\"menu-button\"\r\n          />\r\n        </Tooltip>\r\n      </Space>\r\n    </Sider>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport Sidebar from '../Sidebar';\r\nimport './PageContainer.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const PageContainer = ({ children }) => {\r\n  return (\r\n    <Layout className=\"page\">\r\n      <Sidebar />\r\n      <Layout className=\"site-layout\" style={{ marginLeft: 60 }}>\r\n        <Content className=\"content\">{children}</Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { DatePicker } from 'antd';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport const DateRangeBox = ({ value, onChange }) => (\r\n  <RangePicker defaultValue={value} onChange={onChange} />\r\n);\r\n","import { List, Descriptions } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function SeasonList({ data, loading }) {\r\n  return (\r\n    <List\r\n      dataSource={data}\r\n      loading={loading}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <Descriptions column={2}>\r\n            <Descriptions.Item label=\"START DATE\">\r\n              {item.startDate}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"END DATE\">\r\n              {item.endDate}\r\n            </Descriptions.Item>\r\n            {item.currentMatchday && (\r\n              <Descriptions.Item label=\"CURRENT MATCH DAY\">\r\n                {item.currentMatchday}\r\n              </Descriptions.Item>\r\n            )}\r\n            {item.winner && (\r\n              <Descriptions.Item label=\"WINNER\">\r\n                <Link to={`/team/${item.winner.id}`}>{item.winner.name}</Link>\r\n              </Descriptions.Item>\r\n            )}\r\n          </Descriptions>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { List, Space, Avatar, Descriptions, Tag } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const MatchList = ({ data, loading }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    pagination={{\r\n      defaultPageSize: 20,\r\n    }}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <Descriptions column={3}>\r\n          <Descriptions.Item label=\"HOME TEAM\">\r\n            {<Link to={'/team/' + item.homeTeam.id}>{item.homeTeam.name}</Link>}\r\n          </Descriptions.Item>\r\n          {item.competition && (\r\n            <>\r\n              <Descriptions.Item label=\"COMPETITION\">\r\n                {item.competition.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"AREA\">\r\n                <Space>\r\n                  <Avatar\r\n                    src={item.competition.area.ensignUrl}\r\n                    size={24}\r\n                    style={{ marginTop: -4 }}\r\n                  />\r\n                  {item.competition.area.name}\r\n                </Space>\r\n              </Descriptions.Item>\r\n            </>\r\n          )}\r\n          <Descriptions.Item label=\"AWAY TEAM\">\r\n            {<Link to={'/team/' + item.awayTeam.id}>{item.awayTeam.name}</Link>}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"STATUS\">\r\n            {item.status === 'FINISHED' ? (\r\n              <Tag color=\"#87d068\">{`${item.score.fullTime.homeTeam} : ${item.score.fullTime.awayTeam}`}</Tag>\r\n            ) : (\r\n              <Tag color=\"blue\" icon={<ClockCircleOutlined />}>\r\n                {item.status}\r\n              </Tag>\r\n            )}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"SEASON\">\r\n            {item.season.startDate + ' - ' + item.season.endDate}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { List, Typography, Avatar, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function TeamList({ data, loading }) {\r\n  return (\r\n    <List\r\n      dataSource={data}\r\n      loading={loading}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={item.crestUrl} />}\r\n            title={<Link to={`/team/${item.id}`}>{item.name}</Link>}\r\n            description={item.address}\r\n          />\r\n          <Space direction=\"vertical\" align=\"end\">\r\n            <Typography.Text>{item.phone}</Typography.Text>\r\n            <a href={'mailto:' + item.email}>{item.email}</a>\r\n            <Typography.Text strong>{item.winner?.name}</Typography.Text>\r\n          </Space>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.football-data.org/v2';\r\naxios.defaults.headers.common[\"X-Auth-Token\"] = '8967abefd52441eb9965718ea825d40d';\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;","import { axios } from '../../services';\r\n\r\nexport const competitionApi = {\r\n  list: () => axios.get('/competitions?plan=TIER_ONE'),\r\n  get: (id) => axios.get('/competitions/' + id),\r\n  teams: (id) => axios.get(`/competitions/${id}/teams`),\r\n  matches: (code, filter = '') => axios.get(`/competitions/${code}/matches${filter}`),\r\n}\r\n\r\nexport const teamApi = {\r\n  get: (id) => axios.get('/teams/' + id),\r\n  list: () => axios.get('/teams'),\r\n}\r\n\r\nexport const matchApi = {\r\n  list: () => axios.get('/matches'),\r\n  get: (id) => axios.get('/matches/' + id),\r\n  byResource: (resource, id, filter = '') => axios.get(`/${resource}/${id}/matches${filter}`),\r\n}","import { notification } from 'antd';\r\n\r\nexport const openNotification = ({ text, type = 'info', title, duration = 3 }) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration,\r\n  });","import { competitionApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\nimport { competitionsFetching, competitionsSetData, competitionsLoaded } from '../reducers/competitionsSlice';\r\n\r\nexport const competitionsAction = {\r\n  getCompetetionList: () => dispatch => {\r\n    dispatch(competitionsFetching({ isFetching: true }));\r\n    competitionApi.list().then(({ data }) => {\r\n      dispatch(competitionsSetData({ data: data.competitions }));\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the competition list',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(competitionsLoaded({ loaded: true }))\r\n    })\r\n  }\r\n}\r\n\r\n","import { competitionApi } from '../../utils/api';\r\nimport { competitionSetData, competitionFetching, competitionFetchingError } from '../reducers';\r\n\r\nexport const competitionAction = {\r\n  getContent: (code) => dispatch => {\r\n    dispatch(competitionFetching());\r\n    Promise.all([\r\n      competitionApi.get(code),\r\n      competitionApi.teams(code)\r\n    ]).then(([competition, teams]) => {\r\n      dispatch(competitionSetData({ data: competition.data, teams: teams.data }))\r\n    }).catch((err) => {\r\n      dispatch(competitionFetchingError({\r\n        errorText: err.toString() + '. Failed fetch competition data'\r\n      }))\r\n    })\r\n  },\r\n}\r\n\r\n","import { teamApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\nimport { teamsSetData, teamsFetching, teamsLoaded } from '../reducers';\r\n\r\nexport const teamsAction = {\r\n  getTeamList: () => dispatch => {\r\n    dispatch(teamsFetching({ isFetching: true }));\r\n    teamApi.list().then(({ data }) => {\r\n      dispatch(teamsSetData({ data: data.teams }))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the competition list',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(teamsLoaded({ loaded: true }))\r\n    })\r\n  }\r\n}\r\n\r\n","import { teamApi } from '../../utils/api';\r\nimport { teamSetData, teamFetching, teamFetchingError } from '../reducers';\r\n\r\nexport const teamAction = {\r\n  get: (code) => dispatch => {\r\n    dispatch(teamFetching());\r\n    teamApi.get(code).then(({ data }) => {\r\n      dispatch(teamSetData({ data }))\r\n    }).catch((err) => {\r\n      dispatch(teamFetchingError({\r\n        errorText: err.toString() + '. Failed fetch team data'\r\n      }))\r\n    })\r\n  },\r\n}\r\n\r\n","import { matchApi } from '../../utils/api';\r\nimport { matchesSetData, matchesFetching, matchesFetchingError } from '../reducers';\r\n\r\nexport const matchesAction = {\r\n  list: (resource, code, search) => dispatch => {\r\n    dispatch(matchesFetching({ isFetching: true }));\r\n\r\n    matchApi.byResource(resource, code, search).then(({ data }) => {\r\n      dispatch(matchesSetData({ data: data.matches }))\r\n    }).catch((err) => {\r\n      dispatch(matchesFetchingError({\r\n        errorText: 'Failed fetch mathes of ' + resource + ' ' + err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      }))\r\n    })\r\n  },\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const getDateRange = (search) => {\r\n  if (!search) return;\r\n  const urlParams = new URLSearchParams(search);\r\n\r\n  return [\r\n    moment(urlParams.get('dateFrom'), 'YYYY-MM-DD'),\r\n    moment(urlParams.get('dateTo'), 'YYYY-MM-DD'),\r\n  ];\r\n}","import { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport const TabMenu = ({ active, tabs, extra, onChange }) => (\r\n  <Tabs activeKey={active} tabBarExtraContent={extra} onChange={onChange}>\r\n    {tabs.map((tab) => (\r\n      <TabPane tab={`${tab.key.toUpperCase()} ${tab.count}`} key={tab.key} />\r\n    ))}\r\n  </Tabs>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/no-emblem.08b382ac.jfif\";","import { PageHeader, Skeleton, Row, Col, Image } from 'antd';\r\nimport noEmblem from '../images/no-emblem.jfif';\r\n\r\nexport const DescriptionPane = ({\r\n  avatarUrl,\r\n  title,\r\n  subTitle,\r\n  description,\r\n  children,\r\n  loading,\r\n  imageWidth = 100,\r\n}) =>\r\n  loading ? (\r\n    <div className=\"ant-page-header\">\r\n      <Skeleton avatar paragraph={{ rows: 5 }} round active />\r\n    </div>\r\n  ) : (\r\n    <PageHeader\r\n      ghost={false}\r\n      onBack={() => window.history.back()}\r\n      title={title}\r\n      subTitle={subTitle}\r\n      avatar={{\r\n        src: avatarUrl || noEmblem,\r\n      }}\r\n    >\r\n      <Row justify=\"space-between\">\r\n        <Col flex=\"1\" xs={24} md={24} lg={18} xl={20}>\r\n          {description}\r\n        </Col>\r\n        <Col xs={24} md={6} lg={6} xl={4}>\r\n          <Image\r\n            src={avatarUrl || noEmblem}\r\n            shape=\"square\"\r\n            width={imageWidth}\r\n            preview={false}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {children}\r\n    </PageHeader>\r\n  );\r\n","import { Descriptions } from 'antd';\r\n\r\nexport const CompetitionContent = ({ data }) => (\r\n  <Descriptions column={1}>\r\n    <Descriptions.Item label=\"Area\" labelStyle={{ fontWeight: 600 }}>\r\n      {data.area.name}\r\n    </Descriptions.Item>\r\n    <Descriptions.Item label=\"Current season\">\r\n      {`${data.currentSeason.startDate} - ${data.currentSeason.endDate}`}\r\n    </Descriptions.Item>\r\n    <Descriptions.Item label=\"Current Match Day\">\r\n      {data.currentSeason.currentMatchday}\r\n    </Descriptions.Item>\r\n  </Descriptions>\r\n);\r\n","import { createElement, useEffect, useRef, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { DateRangeBox } from '../DateRangeBox';\r\nimport { SeasonList } from '../SeasonList';\r\nimport { MatchList } from '../MatchList.jsx';\r\nimport { TeamList } from '../TeamList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { competitionAction, matchesAction } from '../../store/actions';\r\nimport { getDateRange } from '../../utils';\r\nimport { TabMenu } from '../TabMenu';\r\nimport { DescriptionPane } from '../DescriptionPane';\r\nimport { CompetitionContent } from './CompetitionContent';\r\n\r\nexport function Competition() {\r\n  const { id, tab } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [curTab, setCurTab] = useState('seasons');\r\n  const [tabData, setTabData] = useState([]);\r\n  const competition = useSelector((s) => s.competition);\r\n  const { fetchingState: matchFetchingState, data: matches } = useSelector(\r\n    (s) => s.matches\r\n  );\r\n  const {\r\n    fetchingState: competitionFetchingState,\r\n    seasons,\r\n    teams,\r\n  } = competition;\r\n  const [refreshMatches, setRefreshMatshes] = useState(true);\r\n  const dateRangeRef = useRef('');\r\n  const cardComponent = {\r\n    seasons: SeasonList,\r\n    matches: MatchList,\r\n    teams: TeamList,\r\n  };\r\n  const extraTabContent = {\r\n    matches: (\r\n      <DateRangeBox value={getDateRange(search)} onChange={onChangeRange} />\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(competitionAction.getContent(id));\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (competitionFetchingState === 'success' && refreshMatches) {\r\n      dispatch(matchesAction.list('competitions', id, search));\r\n      if (search) dateRangeRef.current = search;\r\n      setRefreshMatshes(false);\r\n    }\r\n  }, [dispatch, id, refreshMatches, search, competitionFetchingState]);\r\n\r\n  useEffect(() => {\r\n    if (competitionFetchingState === 'failed') {\r\n      throw competition.errorText;\r\n    }\r\n    if (competitionFetchingState !== 'success') return;\r\n    const tabsData = {\r\n      seasons,\r\n      matches,\r\n      teams,\r\n    };\r\n    const variant = tab || 'seasons';\r\n\r\n    setCurTab(variant);\r\n    setTabData(tabsData[variant]);\r\n  }, [\r\n    competitionFetchingState,\r\n    matches,\r\n    seasons,\r\n    tab,\r\n    teams,\r\n    competition.errorText,\r\n  ]);\r\n\r\n  function onChangeRange(dt, str) {\r\n    setRefreshMatshes(true);\r\n    if (dt) {\r\n      const [from, to] = str;\r\n      dateRangeRef.current = `?dateFrom=${from}&dateTo=${to}`;\r\n    } else {\r\n      dateRangeRef.current = '';\r\n    }\r\n    history.replace(`/competition/${id}/matches` + dateRangeRef.current);\r\n  }\r\n\r\n  function changeTab(key) {\r\n    switch (key) {\r\n      //  for matches return the previous date range\r\n      case 'matches':\r\n        dateRangeRef.current\r\n          ? history.replace(`/competition/${id}/${key}${dateRangeRef.current}`)\r\n          : history.replace(`/competition/${id}/${key}`);\r\n        break;\r\n\r\n      case 'teams':\r\n        history.replace(`/competition/${id}/${key}`);\r\n        break;\r\n\r\n      default:\r\n        history.replace(`/competition/${id}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DescriptionPane\r\n      title={competition.name}\r\n      subTitle={competition.code}\r\n      avatarUrl={competition.emblemUrl}\r\n      loading={competitionFetchingState === 'loading'}\r\n      description={<CompetitionContent data={competition} />}\r\n    >\r\n      <TabMenu\r\n        active={curTab}\r\n        tabs={[\r\n          { key: 'seasons', count: seasons.length },\r\n          { key: 'matches', count: matches.length },\r\n          { key: 'teams', count: teams.length },\r\n        ]}\r\n        extra={extraTabContent[curTab]}\r\n        onChange={changeTab}\r\n      />\r\n      {createElement(cardComponent[curTab], {\r\n        data: tabData,\r\n        loading: matchFetchingState === 'loading',\r\n      })}\r\n    </DescriptionPane>\r\n  );\r\n}\r\n","import { Col, Descriptions, Row } from 'antd';\r\n\r\nexport const TeamContent = ({ data }) => (\r\n  <Row>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <Descriptions column={1} title=\"Info\">\r\n        <Descriptions.Item label=\"Short Name\">\r\n          {data.shortName}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Area\">{data.area.name}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Adress\">{data.address}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Founded\">{data.founded}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Venue\">{data.venue}</Descriptions.Item>\r\n      </Descriptions>\r\n    </Col>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <Descriptions column={1} title=\"Contacts\">\r\n        <Descriptions.Item label=\"Website\">\r\n          {<a href={data.website}>{data.website}</a>}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Phone\">{data.phone}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Email\">\r\n          {<a href={'mailto:' + data.email}>{data.email}</a>}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Col>\r\n  </Row>\r\n);\r\n","import { List, Typography } from 'antd';\r\n\r\nexport const CompetitionList = ({ data, loading, onClick }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <List.Item.Meta\r\n          title={\r\n            <a\r\n              href={`../competition/${item.code}`}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(item);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </a>\r\n          }\r\n          description={item.code}\r\n        />\r\n        <Typography.Text strong>{item.area.name}</Typography.Text>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { Descriptions, List } from 'antd';\r\nimport { formatDt } from '../helpers';\r\n\r\nexport const SquadList = ({ data, loading }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <Descriptions column={3}>\r\n          <Descriptions.Item label=\"NAME\">{item.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"POSITION\">\r\n            {item.position}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"COUNTRY OF BIRTH\">\r\n            {item.countryOfBirth}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"DATE OF BIRTH\">\r\n            {formatDt(item.dateOfBirth)}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"ROLE\">{item.role}</Descriptions.Item>\r\n        </Descriptions>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","export const formatDt = (dt) => {\r\n  const opt = {\r\n    weekday: 'short',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  };\r\n  const dateTimeFormat = new Intl.DateTimeFormat('en-GB', opt);\r\n  return dateTimeFormat.format(new Date(dt));\r\n}","import { createElement, useEffect, useState, useRef } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { openNotification } from '../../helpers';\r\nimport { DateRangeBox } from '../DateRangeBox';\r\nimport { TabMenu } from '../TabMenu';\r\nimport { TeamContent } from './TeamContent';\r\nimport { DescriptionPane } from '../DescriptionPane';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { teamAction, matchesAction } from '../../store/actions';\r\nimport { CompetitionList } from '../CompetitionList.jsx';\r\nimport { MatchList } from '../MatchList.jsx';\r\nimport { SquadList } from '../SquadList.jsx';\r\nimport { getDateRange } from '../../utils';\r\n\r\nexport function Team() {\r\n  const { id, tab } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [curTab, setCurTab] = useState('active competitions');\r\n  const { isFetching: fetchingMatches, data: matches } = useSelector(\r\n    (s) => s.matches\r\n  );\r\n  const team = useSelector((s) => s.team);\r\n  const { fetchingState: teamFetchingState, activeCompetitions, squad } = team;\r\n  const [refreshMatches, setRefreshMatshes] = useState(true);\r\n  const CardComponent = {\r\n    'active competitions': CompetitionList,\r\n    matches: MatchList,\r\n    squad: SquadList,\r\n  };\r\n\r\n  const dateRangeRef = useRef('');\r\n  const [tabData, setTabData] = useState([]);\r\n  const extraTabContent = {\r\n    matches: (\r\n      <DateRangeBox value={getDateRange(search)} onChange={onChangeRange} />\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(teamAction.get(id));\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (teamFetchingState === 'success' && refreshMatches) {\r\n      dispatch(matchesAction.list('teams', id, search));\r\n      if (search) dateRangeRef.current = search;\r\n      setRefreshMatshes(false);\r\n    }\r\n  }, [dispatch, id, refreshMatches, search, teamFetchingState]);\r\n\r\n  useEffect(() => {\r\n    if (teamFetchingState === 'failed') {\r\n      throw team.errorText;\r\n    }\r\n    if (teamFetchingState !== 'success') return;\r\n\r\n    const tabsData = {\r\n      'active competitions': activeCompetitions,\r\n      matches,\r\n      squad,\r\n    };\r\n    const variant = tab || 'active competitions';\r\n\r\n    setCurTab(variant);\r\n    setTabData(tabsData[variant]);\r\n  }, [\r\n    teamFetchingState,\r\n    matches,\r\n    tab,\r\n    activeCompetitions,\r\n    squad,\r\n    team.errorText,\r\n  ]);\r\n\r\n  function onChangeRange(dt, str) {\r\n    setRefreshMatshes(true);\r\n    if (dt) {\r\n      const [from, to] = str;\r\n      dateRangeRef.current = `?dateFrom=${from}&dateTo=${to}`;\r\n    } else {\r\n      dateRangeRef.current = '';\r\n    }\r\n    history.replace(`/team/${id}/matches` + dateRangeRef.current);\r\n  }\r\n\r\n  function showItem(item) {\r\n    if (curTab !== 'active competitions') return;\r\n\r\n    if (item.plan !== 'TIER_ONE') {\r\n      openNotification({\r\n        title: 'Oops!',\r\n        text: 'Sorry, not available for free plan',\r\n      });\r\n    } else history.push('../competition/' + item.code);\r\n  }\r\n\r\n  function changeTab(key) {\r\n    switch (key) {\r\n      //  for matches return the previous date range\r\n      case 'matches':\r\n        dateRangeRef.current\r\n          ? history.replace(`/team/${id}/${key}${dateRangeRef.current}`)\r\n          : history.replace(`/team/${id}/${key}`);\r\n        break;\r\n\r\n      case 'squad':\r\n        history.replace(`/team/${id}/${key}`);\r\n        break;\r\n\r\n      default:\r\n        history.replace(`/team/${id}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DescriptionPane\r\n      title={team.name}\r\n      subTitle={team.area.name}\r\n      avatarUrl={team.crestUrl}\r\n      description={<TeamContent data={team} />}\r\n      loading={teamFetchingState === 'loading'}\r\n      imageWidth={200}\r\n    >\r\n      <TabMenu\r\n        active={curTab}\r\n        tabs={[\r\n          { key: 'active competitions', count: team.activeCompetitions.length },\r\n          { key: 'matches', count: matches.length },\r\n          { key: 'squad', count: team.squad.length },\r\n        ]}\r\n        extra={extraTabContent[curTab]}\r\n        onChange={changeTab}\r\n      />\r\n      {createElement(CardComponent[curTab], {\r\n        data: tabData,\r\n        loading: fetchingMatches,\r\n        onClick: showItem,\r\n      })}\r\n    </DescriptionPane>\r\n  );\r\n}\r\n","import { Menu } from 'antd';\r\nimport { TeamOutlined, AppstoreOutlined } from '@ant-design/icons';\r\n\r\nexport const CardMenu = ({ tab, changeTab }) => (\r\n  <Menu\r\n    onClick={changeTab}\r\n    selectedKeys={tab}\r\n    mode=\"horizontal\"\r\n    className=\"card-menu\"\r\n  >\r\n    <Menu.Item key=\"competitions\" icon={<AppstoreOutlined />}>\r\n      COMPETITIONS\r\n    </Menu.Item>\r\n    <Menu.Item key=\"teams\" icon={<TeamOutlined />}>\r\n      TEAMS\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n","import { Card, Avatar } from \"antd\";\r\nimport noEmblem from \"../images/no-emblem.jfif\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function CompetitionCard({ item, handleClick }) {\r\n  const { code, emblemUrl, area, name } = item;\r\n\r\n  return (\r\n    <Card onClick={() => handleClick(code)} hoverable bordered={false}>\r\n      <Meta\r\n        avatar={<Avatar src={emblemUrl || noEmblem} size={64} />}\r\n        title={name?.toUpperCase()}\r\n        description={area?.name}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Avatar } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function TeamCard({ item, handleClick }) {\r\n  const { id, name, area, crestUrl } = item;\r\n\r\n  return (\r\n    <Card onClick={() => handleClick(id)} hoverable bordered={false}>\r\n      <Meta\r\n        avatar={<Avatar src={crestUrl} size={64} />}\r\n        title={name?.toUpperCase()}\r\n        description={area?.name}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import { List, Skeleton } from 'antd';\r\nimport CompetitionCard from '../CompetitionCard';\r\nimport TeamCard from '../TeamCard';\r\n\r\nexport const CardListView = ({ tab, data, loading, loaded, onOpenCard }) => (\r\n  <List\r\n    grid={{\r\n      gutter: 16,\r\n      xs: 1,\r\n      sm: 1,\r\n      md: 1,\r\n      lg: 2,\r\n      xl: 3,\r\n      xxl: 4,\r\n    }}\r\n    dataSource={data}\r\n    className=\"card-list\"\r\n    renderItem={(item) => (\r\n      <List.Item style={{ minWidth: 300 }}>\r\n        <Skeleton\r\n          loading={loading}\r\n          active\r\n          avatar={{ style: { margin: '10px 0' } }}\r\n          title\r\n          paragraph={{ rows: 1, style: { marginTop: 16 } }}\r\n          round\r\n        >\r\n          {loaded &&\r\n            (tab === 'competitions' ? (\r\n              <CompetitionCard item={item} handleClick={onOpenCard} />\r\n            ) : (\r\n              <TeamCard item={item} handleClick={onOpenCard} />\r\n            ))}\r\n        </Skeleton>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { Input } from 'antd';\r\n\r\nexport function SearchBox({ handleSearch }) {\r\n  return (\r\n    <Input\r\n      size=\"large\"\r\n      placeholder=\"Input search text\"\r\n      onChange={handleSearch}\r\n      allowClear\r\n    />\r\n  );\r\n}\r\n","import { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Heading = ({ heading }) => <Title>{heading}</Title>;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { competitionsAction, teamsAction } from '../../store/actions';\r\nimport { CardMenu } from '../CardMenu';\r\nimport { CardListView } from './CardLisView';\r\nimport { SearchBox } from '../SearchBox';\r\nimport './CardList.css';\r\nimport { Heading } from '../Heading';\r\n\r\nexport function CardListBase() {\r\n  const { pathname } = useLocation();\r\n  const [heading, setHeading] = useState('');\r\n  const history = useHistory();\r\n  const [tab, setTab] = useState('competitions');\r\n  const [list, setList] = useState([...Array(8).keys()]);\r\n  const dispatch = useDispatch();\r\n  const { data, isFetching, loaded } = useSelector((s) => s[tab]);\r\n\r\n  useEffect(() => {\r\n    switch (pathname) {\r\n      case '/':\r\n        dispatch(competitionsAction.getCompetetionList());\r\n        setHeading('Competitions');\r\n        setTab('competitions');\r\n        break;\r\n\r\n      case '/teams':\r\n        dispatch(teamsAction.getTeamList());\r\n        setHeading('Teams');\r\n        setTab('teams');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [dispatch, pathname]);\r\n\r\n  useEffect(() => {\r\n    if (loaded) {\r\n      setList(data);\r\n    }\r\n  }, [data, loaded]);\r\n\r\n  function changeTab({ key }) {\r\n    switch (key) {\r\n      case 'competitions':\r\n        history.replace('/');\r\n        break;\r\n\r\n      case 'teams':\r\n        history.replace('/teams');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleClick = (code) => {\r\n    // remove the last character\r\n    history.push(`/${tab.slice(0, -1)}/${code}`);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const val = e.target.value.trim();\r\n\r\n    writeSearchValueInUrl(val);\r\n\r\n    if (!val.length) {\r\n      setList(data);\r\n      return;\r\n    }\r\n\r\n    const filteredData = data.filter((item) =>\r\n      RegExp(val, 'i').test(item.name + item.area.name)\r\n    );\r\n    setList(filteredData);\r\n  };\r\n\r\n  const writeSearchValueInUrl = (val) => {\r\n    const prefix = tab === 'teams' ? '/teams' : '';\r\n    val ? history.replace(`${prefix}?q=${val}`) : history.replace(prefix);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading heading={heading} />\r\n      <SearchBox handleSearch={handleSearch} />\r\n      <CardMenu tab={tab} changeTab={changeTab} />\r\n      <CardListView\r\n        tab={tab}\r\n        data={list}\r\n        loading={isFetching}\r\n        loaded={loaded}\r\n        onOpenCard={handleClick}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { PageContainer, Competition, Team, CardList } from './components';\r\nimport { Alert } from 'antd'\r\nconst { ErrorBoundary } = Alert;\r\n\r\nconst App = () => (\r\n  <PageContainer>\r\n    <ErrorBoundary>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={CardList}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/competition/:id/:tab?\"\r\n          component={Competition}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/teams\"\r\n          component={CardList}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/team/:id/:tab?\"\r\n          component={Team}\r\n        />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </ErrorBoundary>\r\n  </PageContainer>\r\n)\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport store from './store/store'\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.REACT_APP_PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}