{"version":3,"sources":["services/axios.js","utils/api/api.js","helpers/openNotification.js","store/actions/competitions-action.js","store/actions/competition-action.js","store/actions/teams-action.js","store/actions/team-action.js","store/actions/matches-action.js","store/reducers/comptetitions-reducer.js","store/reducers/comptetition-reducer.js","store/reducers/teams-reducer.js","store/reducers/team-reducer.js","store/reducers/matches-reducer.js","store/reducers/index.js","store/store.js","components/Sidebar/Sidebar.jsx","components/PageContainer/PageContainer.jsx","components/DateRangeBox.jsx","components/SeasonList.jsx","components/MatchList.jsx","components/TeamList.jsx","utils/getDateRange.js","components/TabMenu.jsx","images/no-emblem.jfif","components/DescriptionPane.jsx","components/Competition/CompetitionContent.jsx","components/Competition/Competition.jsx","components/Team/TeamContent.jsx","components/CompetitionList.jsx","components/SquadList.jsx","helpers/formatDt.js","components/Team/Team.jsx","components/CardMenu.jsx","components/CompetitionCard.jsx","components/TeamCard.jsx","components/CardList/CardLisView.jsx","components/SearchBox.jsx","components/Heading.jsx","components/CardList/CardList.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","headers","common","window","competitionApi","get","id","teamApi","matchApi","resource","filter","openNotification","text","type","title","duration","notification","message","description","COMPETITIONS_SET_DATA","COMPETITIONS_FETCHING","COMPETITIONS_LOADED","competitionsAction","setData","data","fetching","bool","isFetching","loaded","getCompetetionList","dispatch","then","competitions","catch","err","response","error","toString","finally","COMPETITION_SET_DATA","COMPETITION_FETCHING","COMPETITION_LOADED","competitionAction","competition","teams","getContent","code","Promise","all","TEAMS_SET_DATA","TEAMS_FETCHING","TEAMS_LOADED","teamsAction","getTeamList","TEAM_SET_DATA","TEAM_FETCHING","TEAM_LOADED","teamAction","MATCHES_SET_DATA","MATCHES_FETCHING","MATCHES_LOADED","matchesAction","list","search","matches","initialState","comptetitionsReducer","state","payload","name","area","emblemUrl","currentSeason","seasons","comptetitionReducer","teamsReducer","activeCompetitions","address","crestUrl","email","founded","phone","shortName","squad","venue","website","teamReducer","matchesReducer","reducers","history","combineReducers","team","store","createStore","composeWithDevTools","applyMiddleware","thunk","Sider","Layout","Sidebar","useHistory","className","width","style","background","direction","marginTop","padding","size","placement","icon","AppstoreOutlined","shape","onClick","push","TeamOutlined","Content","PageContainer","children","marginLeft","RangePicker","DatePicker","DateRangeBox","value","onChange","defaultValue","SeasonList","loading","dataSource","renderItem","item","Item","Meta","startDate","endDate","currentMatchday","Text","strong","winner","MatchList","pagination","defaultPageSize","column","label","to","homeTeam","src","ensignUrl","awayTeam","status","color","score","fullTime","ClockCircleOutlined","season","TeamList","avatar","align","href","getDateRange","urlParams","URLSearchParams","moment","TabPane","Tabs","TabMenu","active","tabs","extra","activeKey","tabBarExtraContent","map","tab","key","toUpperCase","count","DescriptionPane","avatarUrl","subTitle","imageWidth","paragraph","rows","round","ghost","onBack","back","noEmblem","justify","flex","xs","md","lg","xl","preview","CompetitionContent","labelStyle","fontWeight","Competition","useParams","useLocation","useDispatch","useState","curTab","setCurTab","tabData","setTabData","useSelector","s","loadedMatches","fetchingMatches","refreshMatches","setRefreshMatshes","dateRangeRef","useRef","cardComponent","extraTabContent","dt","str","from","current","replace","useEffect","tabsData","variant","length","createElement","TeamContent","sm","xxl","CompetitionList","e","preventDefault","SquadList","position","countryOfBirth","dateOfBirth","Intl","DateTimeFormat","weekday","year","month","day","format","Date","role","Team","CardComponent","plan","CardMenu","changeTab","selectedKeys","mode","Card","CompetitionCard","handleClick","hoverable","bordered","TeamCard","CardListView","onOpenCard","grid","gutter","minWidth","margin","SearchBox","handleSearch","placeholder","allowClear","Title","Typography","Heading","heading","CardListBase","pathname","setHeading","setTab","Array","keys","setList","writeSearchValueInUrl","val","prefix","target","trim","filteredData","RegExp","test","slice","ErrorBoundary","Alert","App","exact","path","component","CardList","ReactDOM","render","StrictMode","basename","process","REACT_APP_PUBLIC_URL","document","getElementById"],"mappings":"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","file":"static/js/main.7c980eff.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.football-data.org/v2';\r\naxios.defaults.headers.common[\"X-Auth-Token\"] = '8967abefd52441eb9965718ea825d40d';\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;","import { axios } from '../../services';\r\n\r\nexport const competitionApi = {\r\n  list: () => axios.get('/competitions?plan=TIER_ONE'),\r\n  get: (id) => axios.get('/competitions/' + id),\r\n  teams: (id) => axios.get(`/competitions/${id}/teams`),\r\n  matches: (code, filter = '') => axios.get(`/competitions/${code}/matches${filter}`),\r\n}\r\n\r\nexport const teamApi = {\r\n  get: (id) => axios.get('/teams/' + id),\r\n  list: () => axios.get('/teams'),\r\n}\r\n\r\nexport const matchApi = {\r\n  list: () => axios.get('/matches'),\r\n  get: (id) => axios.get('/matches/' + id),\r\n  byResource: (resource, id, filter = '') => axios.get(`/${resource}/${id}/matches${filter}`),\r\n}","import { notification } from 'antd';\r\n\r\nexport const openNotification = ({ text, type = 'info', title, duration = 3 }) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration,\r\n  });","import { competitionApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\n\r\nexport const COMPETITIONS_SET_DATA = 'COMPETITIONS:SET_DATA';\r\nexport const COMPETITIONS_FETCHING = 'COMPETITIONS:FETCHING';\r\nexport const COMPETITIONS_LOADED = 'COMPETITIONS:LOADED';\r\n\r\nexport const competitionsAction = {\r\n  setData: (data) => ({\r\n    type: COMPETITIONS_SET_DATA,\r\n    data\r\n  }),\r\n  fetching: (bool) => ({\r\n    type: COMPETITIONS_FETCHING,\r\n    isFetching: bool\r\n  }),\r\n  loaded: (bool) => ({\r\n    type: COMPETITIONS_LOADED,\r\n    loaded: bool\r\n  }),\r\n\r\n  getCompetetionList: () => dispatch => {\r\n    dispatch(competitionsAction.fetching(true));\r\n    competitionApi.list().then(({ data }) => {\r\n      dispatch(competitionsAction.setData(data.competitions))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the competition list',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(competitionsAction.loaded(true))\r\n    })\r\n  }\r\n}\r\n\r\n","import { competitionApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\n\r\nexport const COMPETITION_SET_DATA = 'COMPETITION:SET_DATA';\r\nexport const COMPETITION_FETCHING = 'COMPETITION:FETCHING';\r\nexport const COMPETITION_LOADED = 'COMPETITION:LOADED';\r\n\r\nexport const competitionAction = {\r\n  setData: (competition, teams) => ({\r\n    type: COMPETITION_SET_DATA,\r\n    competition,\r\n    teams\r\n  }),\r\n  fetching: (bool) => ({\r\n    type: COMPETITION_FETCHING,\r\n    isFetching: bool\r\n  }),\r\n  loaded: (bool) => ({\r\n    type: COMPETITION_LOADED,\r\n    loaded: bool\r\n  }),\r\n\r\n  getContent: (code) => dispatch => {\r\n    dispatch(competitionAction.fetching(true));\r\n    Promise.all([\r\n      competitionApi.get(code),\r\n      competitionApi.teams(code)\r\n    ]).then(([competition, teams]) => {\r\n      dispatch(competitionAction.setData(competition.data, teams.data))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the competition data',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(competitionAction.loaded(true))\r\n    })\r\n  },\r\n}\r\n\r\n","import { teamApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\n\r\nexport const TEAMS_SET_DATA = 'TEAMS:SET_DATA';\r\nexport const TEAMS_FETCHING = 'TEAMS:FETCHING';\r\nexport const TEAMS_LOADED = 'TEAMS:LOADED';\r\n\r\nexport const teamsAction = {\r\n  setData: (data) => ({\r\n    type: TEAMS_SET_DATA,\r\n    data\r\n  }),\r\n  fetching: (bool) => ({\r\n    type: TEAMS_FETCHING,\r\n    isFetching: bool\r\n  }),\r\n  loaded: (bool) => ({\r\n    type: TEAMS_LOADED,\r\n    loaded: bool\r\n  }),\r\n\r\n  getTeamList: () => dispatch => {\r\n    dispatch(teamsAction.fetching(true));\r\n    teamApi.list().then(({ data }) => {\r\n      dispatch(teamsAction.setData(data.teams))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the competition list',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(teamsAction.loaded(true))\r\n    })\r\n  }\r\n}\r\n\r\n","import { teamApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\n\r\nexport const TEAM_SET_DATA = 'TEAM:SET_DATA';\r\nexport const TEAM_FETCHING = 'TEAM:FETCHING';\r\nexport const TEAM_LOADED = 'TEAM:LOADED';\r\n\r\nexport const teamAction = {\r\n  setData: (data) => ({\r\n    type: TEAM_SET_DATA,\r\n    data\r\n  }),\r\n  fetching: (bool) => ({\r\n    type: TEAM_FETCHING,\r\n    isFetching: bool\r\n  }),\r\n  loaded: (bool) => ({\r\n    type: TEAM_LOADED,\r\n    loaded: bool\r\n  }),\r\n\r\n  get: (code) => dispatch => {\r\n    dispatch(teamAction.fetching(true));\r\n    teamApi.get(code).then(({ data }) => {\r\n      dispatch(teamAction.setData(data))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch the team data',\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(teamAction.loaded(true))\r\n    })\r\n  },\r\n}\r\n\r\n","import { matchApi } from '../../utils/api';\r\nimport { openNotification } from '../../helpers';\r\n\r\nexport const MATCHES_SET_DATA = 'MATCHES:SET_DATA';\r\nexport const MATCHES_FETCHING = 'MATCHES:FETCHING';\r\nexport const MATCHES_LOADED = 'MATCHES:LOADED';\r\n\r\nexport const matchesAction = {\r\n  setData: (data) => ({\r\n    type: MATCHES_SET_DATA,\r\n    data,\r\n  }),\r\n  fetching: (bool) => ({\r\n    type: MATCHES_FETCHING,\r\n    isFetching: bool\r\n  }),\r\n  loaded: (bool) => ({\r\n    type: MATCHES_LOADED,\r\n    loaded: bool\r\n  }),\r\n\r\n  list: (resource, code, search) => dispatch => {\r\n    dispatch(matchesAction.fetching(true));\r\n\r\n    matchApi.byResource(resource, code, search).then(({ data }) => {\r\n      dispatch(matchesAction.setData(data.matches))\r\n    }).catch((err) => {\r\n      openNotification({\r\n        type: 'error',\r\n        title: 'Failed fetch mathes of ' + resource,\r\n        text: err.response\r\n          ? `${err.response.error}: ${err.response.message}`\r\n          : err.toString()\r\n      });\r\n    }).finally(() => {\r\n      dispatch(matchesAction.loaded(true))\r\n    })\r\n  },\r\n}\r\n","import {\r\n  COMPETITIONS_SET_DATA,\r\n  COMPETITIONS_FETCHING,\r\n  COMPETITIONS_LOADED\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  data: [],\r\n}\r\n\r\nexport const comptetitionsReducer = (state = initialState, payload) => {\r\n\r\n  switch (payload.type) {\r\n    case COMPETITIONS_SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: payload.data,\r\n      }\r\n    }\r\n\r\n    case COMPETITIONS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    }\r\n\r\n    case COMPETITIONS_LOADED: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  COMPETITION_SET_DATA,\r\n  COMPETITION_FETCHING,\r\n  COMPETITION_LOADED\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  name: '',\r\n  code: '',\r\n  area: {\r\n    name: ''\r\n  },\r\n  emblemUrl: '',\r\n  currentSeason: [],\r\n  seasons: [],\r\n  teams: [],\r\n}\r\n\r\nexport const comptetitionReducer = (state = initialState, payload) => {\r\n  switch (payload.type) {\r\n    case COMPETITION_SET_DATA: {\r\n      const { name, code, area, emblemUrl, currentSeason, seasons } = payload.competition;\r\n      const { teams } = payload.teams\r\n\r\n      return {\r\n        ...state,\r\n        name,\r\n        code,\r\n        area,\r\n        emblemUrl,\r\n        currentSeason,\r\n        seasons,\r\n        teams,\r\n      }\r\n    }\r\n\r\n    case COMPETITION_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    }\r\n\r\n    case COMPETITION_LOADED: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  TEAMS_SET_DATA,\r\n  TEAMS_FETCHING,\r\n  TEAMS_LOADED\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  data: [],\r\n}\r\n\r\nexport const teamsReducer = (state = initialState, payload) => {\r\n\r\n  switch (payload.type) {\r\n    case TEAMS_SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: payload.data,\r\n      }\r\n    }\r\n\r\n    case TEAMS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    }\r\n\r\n    case TEAMS_LOADED: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  TEAM_SET_DATA,\r\n  TEAM_FETCHING,\r\n  TEAM_LOADED\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  activeCompetitions: [],\r\n  address: '',\r\n  area: {\r\n    name: ''\r\n  },\r\n  crestUrl: '',\r\n  email: '',\r\n  founded: '',\r\n  name: '',\r\n  phone: '',\r\n  shortName: '',\r\n  squad: [],\r\n  venue: '',\r\n  website: ''\r\n}\r\n\r\nexport const teamReducer = (state = initialState, payload) => {\r\n\r\n  switch (payload.type) {\r\n    case TEAM_SET_DATA: {\r\n      const { activeCompetitions, address, area, crestUrl, email, founded, name, phone, shortName, squad, venue, website } = payload.data;\r\n\r\n      return {\r\n        ...state,\r\n        activeCompetitions,\r\n        address,\r\n        area,\r\n        crestUrl,\r\n        email,\r\n        founded,\r\n        name,\r\n        phone,\r\n        shortName,\r\n        squad,\r\n        venue,\r\n        website\r\n      }\r\n    }\r\n\r\n    case TEAM_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    }\r\n\r\n    case TEAM_LOADED: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  MATCHES_SET_DATA,\r\n  MATCHES_FETCHING,\r\n  MATCHES_LOADED\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  loaded: false,\r\n  data: [],\r\n}\r\n\r\nexport const matchesReducer = (state = initialState, payload) => {\r\n\r\n  switch (payload.type) {\r\n    case MATCHES_SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: payload.data,\r\n      }\r\n    }\r\n\r\n    case MATCHES_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching,\r\n      }\r\n    }\r\n\r\n    case MATCHES_LOADED: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        loaded: payload.loaded,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n// import { connectRouter } from 'connected-react-router';\r\nimport { comptetitionsReducer } from './comptetitions-reducer';\r\nimport { comptetitionReducer } from './comptetition-reducer';\r\nimport { teamsReducer } from './teams-reducer';\r\nimport { teamReducer } from './team-reducer';\r\nimport { matchesReducer } from './matches-reducer';\r\n\r\nconst reducers = history => combineReducers({\r\n  // router: connectRouter(history),\r\n  competitions: comptetitionsReducer,\r\n  competition: comptetitionReducer,\r\n  teams: teamsReducer,\r\n  matches: matchesReducer,\r\n  team: teamReducer\r\n});\r\n\r\nexport default reducers;","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers/\";\r\n\r\nfunction configureStore() {\r\n  return createStore(reducers(), composeWithDevTools(applyMiddleware(thunk)))\r\n}\r\n\r\nexport const store = configureStore();","import { Layout, Button, Space, Tooltip } from 'antd';\r\nimport { TeamOutlined, AppstoreOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const Sidebar = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={56} style={{ background: 'none' }}>\r\n      <Space\r\n        direction=\"vertical\"\r\n        style={{ marginTop: 64, padding: '0px 8px' }}\r\n        size=\"large\"\r\n      >\r\n        <Tooltip placement=\"right\" title=\"COMPETITIONS\">\r\n          <Button\r\n            icon={<AppstoreOutlined />}\r\n            shape=\"circle\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={() => history.push('/')}\r\n            className=\"menu-button\"\r\n          />\r\n        </Tooltip>\r\n        <Tooltip placement=\"right\" title=\"TEAMS\">\r\n          <Button\r\n            icon={<TeamOutlined />}\r\n            shape=\"circle\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={() => history.push('/teams')}\r\n            className=\"menu-button\"\r\n          />\r\n        </Tooltip>\r\n      </Space>\r\n    </Sider>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport Sidebar from '../Sidebar';\r\nimport './PageContainer.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const PageContainer = ({ children }) => {\r\n  return (\r\n    <Layout className=\"page\">\r\n      <Sidebar />\r\n      <Layout className=\"site-layout\" style={{ marginLeft: 60 }}>\r\n        <Content className=\"content\">{children}</Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { DatePicker } from 'antd';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport const DateRangeBox = ({ value, onChange }) => (\r\n  <RangePicker defaultValue={value} onChange={onChange} />\r\n);\r\n","import { List, Typography } from 'antd';\r\n\r\nexport function SeasonList({ data, loading }) {\r\n  return (\r\n    <List\r\n      dataSource={data}\r\n      loading={loading}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <List.Item.Meta\r\n            title={item.startDate + ' - ' + item.endDate}\r\n            description={item.currentMatchday}\r\n          />\r\n          <Typography.Text strong>{item.winner?.name}</Typography.Text>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { List, Space, Avatar, Descriptions, Tag } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const MatchList = ({ data, loading }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    pagination={{\r\n      defaultPageSize: 20,\r\n    }}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <Descriptions column={3}>\r\n          <Descriptions.Item label=\"HOME TEAM\">\r\n            {<Link to={'/team/' + item.homeTeam.id}>{item.homeTeam.name}</Link>}\r\n          </Descriptions.Item>\r\n          {item.competition && (\r\n            <>\r\n              <Descriptions.Item label=\"COMPETITION\">\r\n                {item.competition.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"AREA\">\r\n                <Space>\r\n                  <Avatar\r\n                    src={item.competition.area.ensignUrl}\r\n                    size={24}\r\n                    style={{ marginTop: -4 }}\r\n                  />\r\n                  {item.competition.area.name}\r\n                </Space>\r\n              </Descriptions.Item>\r\n            </>\r\n          )}\r\n          <Descriptions.Item label=\"AWAY TEAM\">\r\n            {<Link to={'/team/' + item.awayTeam.id}>{item.awayTeam.name}</Link>}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"STATUS\">\r\n            {item.status === 'FINISHED' ? (\r\n              <Tag color=\"#87d068\">{`${item.score.fullTime.homeTeam} : ${item.score.fullTime.awayTeam}`}</Tag>\r\n            ) : (\r\n              <Tag color=\"blue\" icon={<ClockCircleOutlined />}>\r\n                {item.status}\r\n              </Tag>\r\n            )}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"SEASON\">\r\n            {item.season.startDate + ' - ' + item.season.endDate}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { List, Typography, Avatar, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function TeamList({ data, loading }) {\r\n  return (\r\n    <List\r\n      dataSource={data}\r\n      loading={loading}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={item.crestUrl} />}\r\n            title={<Link to={`/team/${item.id}`}>{item.name}</Link>}\r\n            description={item.address}\r\n          />\r\n          <Space direction=\"vertical\" align=\"end\">\r\n            <Typography.Text>{item.phone}</Typography.Text>\r\n            <a href={'mailto:' + item.email}>{item.email}</a>\r\n            <Typography.Text strong>{item.winner?.name}</Typography.Text>\r\n          </Space>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const getDateRange = (search) => {\r\n  if (!search) return;\r\n  const urlParams = new URLSearchParams(search);\r\n\r\n  return [\r\n    moment(urlParams.get('dateFrom'), 'YYYY-MM-DD'),\r\n    moment(urlParams.get('dateTo'), 'YYYY-MM-DD'),\r\n  ];\r\n}","import { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport const TabMenu = ({ active, tabs, extra, onChange }) => {\r\n  return (\r\n    <Tabs activeKey={active} tabBarExtraContent={extra} onChange={onChange}>\r\n      {tabs.map((tab) => (\r\n        <TabPane tab={`${tab.key.toUpperCase()} ${tab.count}`} key={tab.key} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no-emblem.08b382ac.jfif\";","import { PageHeader, Skeleton, Row, Col, Image } from 'antd';\r\nimport noEmblem from '../images/no-emblem.jfif';\r\n\r\nexport const DescriptionPane = ({\r\n  avatarUrl,\r\n  title,\r\n  subTitle,\r\n  description,\r\n  children,\r\n  loading,\r\n  imageWidth = 100,\r\n}) =>\r\n  loading ? (\r\n    <div className=\"ant-page-header\">\r\n      <Skeleton avatar paragraph={{ rows: 5 }} round active />\r\n    </div>\r\n  ) : (\r\n    <PageHeader\r\n      ghost={false}\r\n      onBack={() => window.history.back()}\r\n      title={title}\r\n      subTitle={subTitle}\r\n      avatar={{\r\n        src: avatarUrl || noEmblem,\r\n      }}\r\n    >\r\n      <Row justify=\"space-between\">\r\n        <Col flex=\"1\" xs={24} md={24} lg={18} xl={20}>\r\n          {description}\r\n        </Col>\r\n        <Col xs={24} md={6} lg={6} xl={4}>\r\n          <Image\r\n            src={avatarUrl || noEmblem}\r\n            shape=\"square\"\r\n            width={imageWidth}\r\n            preview={false}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {children}\r\n    </PageHeader>\r\n  );\r\n","import { Descriptions } from 'antd';\r\n\r\nexport const CompetitionContent = ({ data }) => (\r\n  <Descriptions column={1}>\r\n    <Descriptions.Item label=\"Area\" labelStyle={{ fontWeight: 600 }}>\r\n      {data.area.name}\r\n    </Descriptions.Item>\r\n    <Descriptions.Item label=\"Current season\">\r\n      {`${data.currentSeason.startDate} - ${data.currentSeason.endDate}`}\r\n    </Descriptions.Item>\r\n    <Descriptions.Item label=\"Current Match Day\">\r\n      {data.currentSeason.currentMatchday}\r\n    </Descriptions.Item>\r\n  </Descriptions>\r\n);\r\n","import { createElement, useEffect, useRef, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { DateRangeBox } from '../DateRangeBox';\r\nimport { SeasonList } from '../SeasonList';\r\nimport { MatchList } from '../MatchList.jsx';\r\nimport { TeamList } from '../TeamList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { competitionAction, matchesAction } from '../../store/actions';\r\nimport { getDateRange } from '../../utils';\r\nimport { TabMenu } from '../TabMenu';\r\nimport { DescriptionPane } from '../DescriptionPane';\r\nimport { CompetitionContent } from './CompetitionContent';\r\n\r\nexport function Competition() {\r\n  const { id, tab } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [curTab, setCurTab] = useState('seasons');\r\n  const [tabData, setTabData] = useState([]);\r\n  const competition = useSelector((s) => s.competition);\r\n  const {\r\n    loaded: loadedMatches,\r\n    isFetching: fetchingMatches,\r\n    data: matches,\r\n  } = useSelector((s) => s.matches);\r\n  const { loaded, seasons, teams } = competition;\r\n  const [refreshMatches, setRefreshMatshes] = useState(!loadedMatches);\r\n  const dateRangeRef = useRef('');\r\n  const cardComponent = {\r\n    seasons: SeasonList,\r\n    matches: MatchList,\r\n    teams: TeamList,\r\n  };\r\n  const extraTabContent = {\r\n    matches: (\r\n      <DateRangeBox value={getDateRange(search)} onChange={onChangeRange} />\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(competitionAction.getContent(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (refreshMatches) {\r\n      dispatch(matchesAction.list('competitions', id, search));\r\n      if (search) dateRangeRef.current = search;\r\n      setRefreshMatshes(false);\r\n    }\r\n  }, [dispatch, id, refreshMatches, loadedMatches, search]);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) return;\r\n    const tabsData = {\r\n      seasons,\r\n      matches,\r\n      teams,\r\n    };\r\n    const variant = tab || 'seasons';\r\n\r\n    setCurTab(variant);\r\n    setTabData(tabsData[variant]);\r\n  }, [loaded, matches, seasons, tab, teams]);\r\n\r\n  function onChangeRange(dt, str) {\r\n    setRefreshMatshes(true);\r\n    if (dt) {\r\n      const [from, to] = str;\r\n      dateRangeRef.current = `?dateFrom=${from}&dateTo=${to}`;\r\n    } else {\r\n      dateRangeRef.current = '';\r\n    }\r\n    history.replace(`/competition/${id}/matches` + dateRangeRef.current);\r\n  }\r\n\r\n  function changeTab(key) {\r\n    switch (key) {\r\n      //  for matches return the previous date range\r\n      case 'matches':\r\n        dateRangeRef.current\r\n          ? history.replace(`/competition/${id}/${key}${dateRangeRef.current}`)\r\n          : history.replace(`/competition/${id}/${key}`);\r\n        break;\r\n\r\n      case 'teams':\r\n        history.replace(`/competition/${id}/${key}`);\r\n        break;\r\n\r\n      default:\r\n        history.replace(`/competition/${id}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DescriptionPane\r\n      title={competition.name}\r\n      subTitle={competition.code}\r\n      avatarUrl={competition.emblemUrl}\r\n      loading={!loaded}\r\n      description={<CompetitionContent data={competition} />}\r\n    >\r\n      <TabMenu\r\n        active={curTab}\r\n        tabs={[\r\n          { key: 'seasons', count: seasons.length },\r\n          { key: 'matches', count: matches.length },\r\n          { key: 'teams', count: teams.length },\r\n        ]}\r\n        extra={extraTabContent[curTab]}\r\n        onChange={changeTab}\r\n      />\r\n      {createElement(cardComponent[curTab], {\r\n        data: tabData,\r\n        loading: fetchingMatches,\r\n      })}\r\n    </DescriptionPane>\r\n  );\r\n}\r\n","import { Col, Descriptions, Row } from 'antd';\r\n\r\nexport const TeamContent = ({ data }) => (\r\n  <Row>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <Descriptions column={1} title=\"Info\">\r\n        <Descriptions.Item label=\"Short Name\">\r\n          {data.shortName}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Area\">{data.area.name}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Adress\">{data.address}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Founded\">{data.founded}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Venue\">{data.venue}</Descriptions.Item>\r\n      </Descriptions>\r\n    </Col>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <Descriptions column={1} title=\"Contacts\">\r\n        <Descriptions.Item label=\"Website\">\r\n          {<a href={data.website}>{data.website}</a>}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Phone\">{data.phone}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Email\">\r\n          {<a href={'mailto:' + data.email}>{data.email}</a>}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Col>\r\n  </Row>\r\n);\r\n","import { List, Typography } from 'antd';\r\n\r\nexport const CompetitionList = ({ data, loading, onClick }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <List.Item.Meta\r\n          title={\r\n            <a\r\n              href={`../competition/${item.code}`}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(item);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </a>\r\n          }\r\n          description={item.code}\r\n        />\r\n        <Typography.Text strong>{item.area.name}</Typography.Text>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { Descriptions, List } from 'antd';\r\nimport { formatDt } from '../helpers';\r\n\r\nexport const SquadList = ({ data, loading }) => (\r\n  <List\r\n    dataSource={data}\r\n    loading={loading}\r\n    renderItem={(item) => (\r\n      <List.Item>\r\n        <Descriptions column={3}>\r\n          <Descriptions.Item label=\"NAME\">{item.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"POSITION\">\r\n            {item.position}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"COUNTRY OF BIRTH\">\r\n            {item.countryOfBirth}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"DATE OF BIRTH\">\r\n            {formatDt(item.dateOfBirth)}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"ROLE\">{item.role}</Descriptions.Item>\r\n        </Descriptions>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","export const formatDt = (dt) => {\r\n  const opt = {\r\n    weekday: 'short',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  };\r\n  const dateTimeFormat = new Intl.DateTimeFormat('en-GB', opt);\r\n  return dateTimeFormat.format(new Date(dt));\r\n}","import { createElement, useEffect, useState, useRef } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { openNotification } from '../../helpers';\r\nimport { DateRangeBox } from '../DateRangeBox';\r\nimport { TabMenu } from '../TabMenu';\r\nimport { TeamContent } from './TeamContent';\r\nimport { DescriptionPane } from '../DescriptionPane';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { teamAction, matchesAction } from '../../store/actions';\r\nimport { CompetitionList } from '../CompetitionList.jsx';\r\nimport { MatchList } from '../MatchList.jsx';\r\nimport { SquadList } from '../SquadList.jsx';\r\nimport { getDateRange } from '../../utils';\r\n\r\nexport function Team() {\r\n  const { id, tab } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [curTab, setCurTab] = useState('active competitions');\r\n  const {\r\n    loaded: loadedMatches,\r\n    isFetching: fetchingMatches,\r\n    data: matches,\r\n  } = useSelector((s) => s.matches);\r\n  const team = useSelector((s) => s.team);\r\n  const { loaded, activeCompetitions, squad } = team;\r\n  const [refreshMatches, setRefreshMatshes] = useState(true);\r\n  const CardComponent = {\r\n    'active competitions': CompetitionList,\r\n    matches: MatchList,\r\n    squad: SquadList,\r\n  };\r\n  const dateRangeRef = useRef('');\r\n  const [tabData, setTabData] = useState([]);\r\n  const extraTabContent = {\r\n    matches: (\r\n      <DateRangeBox value={getDateRange(search)} onChange={onChangeRange} />\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(teamAction.get(id));\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (refreshMatches || !loadedMatches) {\r\n      dispatch(matchesAction.list('teams', id, search));\r\n      if (search) dateRangeRef.current = search;\r\n      setRefreshMatshes(false);\r\n    }\r\n  }, [dispatch, id, refreshMatches, loadedMatches, search]);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) return;\r\n\r\n    const tabsData = {\r\n      'active competitions': activeCompetitions,\r\n      matches,\r\n      squad,\r\n    };\r\n    const variant = tab || 'active competitions';\r\n\r\n    setCurTab(variant);\r\n    setTabData(tabsData[variant]);\r\n  }, [loaded, matches, tab, activeCompetitions, squad]);\r\n\r\n  function onChangeRange(dt, str) {\r\n    setRefreshMatshes(true);\r\n    if (dt) {\r\n      const [from, to] = str;\r\n      dateRangeRef.current = `?dateFrom=${from}&dateTo=${to}`;\r\n    } else {\r\n      dateRangeRef.current = '';\r\n    }\r\n    history.replace(`/team/${id}/matches` + dateRangeRef.current);\r\n  }\r\n\r\n  function showItem(item) {\r\n    if (curTab !== 'active competitions') return;\r\n\r\n    if (item.plan !== 'TIER_ONE') {\r\n      openNotification({\r\n        title: 'Oops!',\r\n        text: 'Sorry, not available for free plan',\r\n      });\r\n    } else history.push('../competition/' + item.code);\r\n  }\r\n\r\n   function changeTab(key) {\r\n    switch (key) {\r\n      //  for matches return the previous date range\r\n      case 'matches':\r\n        dateRangeRef.current\r\n          ? history.replace(`/team/${id}/${key}${dateRangeRef.current}`)\r\n          : history.replace(`/team/${id}/${key}`);\r\n        break;\r\n\r\n      case 'squad':\r\n        history.replace(`/team/${id}/${key}`);\r\n        break;\r\n\r\n      default:\r\n        history.replace(`/team/${id}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DescriptionPane\r\n      title={team.name}\r\n      subTitle={team.area.name}\r\n      avatarUrl={team.crestUrl}\r\n      description={<TeamContent data={team} />}\r\n      loading={team.isFetching}\r\n      imageWidth={200}\r\n    >\r\n      <TabMenu\r\n        active={curTab}\r\n        tabs={[\r\n          { key: 'active competitions', count: team.activeCompetitions.length },\r\n          { key: 'matches', count: matches.length },\r\n          { key: 'squad', count: team.squad.length },\r\n        ]}\r\n        extra={extraTabContent[curTab]}\r\n        onChange={changeTab}\r\n      />\r\n      {createElement(CardComponent[curTab], {\r\n        data: tabData,\r\n        loading: fetchingMatches,\r\n        onClick: showItem,\r\n      })}\r\n    </DescriptionPane>\r\n  );\r\n}\r\n","import { Menu } from 'antd';\r\nimport { TeamOutlined, AppstoreOutlined } from '@ant-design/icons';\r\n\r\nexport const CardMenu = ({ tab, changeTab }) => (\r\n  <Menu\r\n    onClick={changeTab}\r\n    selectedKeys={tab}\r\n    mode=\"horizontal\"\r\n    className=\"card-menu\"\r\n  >\r\n    <Menu.Item key=\"competitions\" icon={<AppstoreOutlined />}>\r\n      COMPETITIONS\r\n    </Menu.Item>\r\n    <Menu.Item key=\"teams\" icon={<TeamOutlined />}>\r\n      TEAMS\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n","import { Card, Avatar } from \"antd\";\r\nimport noEmblem from \"../images/no-emblem.jfif\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function CompetitionCard({ item, handleClick }) {\r\n  const { code, emblemUrl, area, name } = item;\r\n\r\n  return (\r\n    <Card onClick={() => handleClick(code)} hoverable bordered={false}>\r\n      <Meta\r\n        avatar={<Avatar src={emblemUrl || noEmblem} size={64} />}\r\n        title={name?.toUpperCase()}\r\n        description={area?.name}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Avatar } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function TeamCard({ item, handleClick }) {\r\n  const { id, name, area, crestUrl } = item;\r\n\r\n  return (\r\n    <Card onClick={() => handleClick(id)} hoverable bordered={false}>\r\n      <Meta\r\n        avatar={<Avatar src={crestUrl} size={64} />}\r\n        title={name?.toUpperCase()}\r\n        description={area?.name}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import { List, Skeleton } from 'antd';\r\nimport CompetitionCard from '../CompetitionCard';\r\nimport TeamCard from '../TeamCard';\r\n\r\nexport const CardListView = ({ tab, data, loading, loaded, onOpenCard }) => (\r\n  <List\r\n    grid={{\r\n      gutter: 16,\r\n      xs: 1,\r\n      sm: 1,\r\n      md: 1,\r\n      lg: 2,\r\n      xl: 3,\r\n      xxl: 4,\r\n    }}\r\n    dataSource={data}\r\n    className=\"card-list\"\r\n    renderItem={(item) => (\r\n      <List.Item style={{ minWidth: 300 }}>\r\n        <Skeleton\r\n          loading={loading}\r\n          active\r\n          avatar={{ style: { margin: '10px 0' } }}\r\n          title\r\n          paragraph={{ rows: 1, style: { marginTop: 16 } }}\r\n          round\r\n        >\r\n          {loaded &&\r\n            (tab === 'competitions' ? (\r\n              <CompetitionCard item={item} handleClick={onOpenCard} />\r\n            ) : (\r\n              <TeamCard item={item} handleClick={onOpenCard} />\r\n            ))}\r\n        </Skeleton>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n","import { Input } from 'antd';\r\n\r\nexport function SearchBox({ handleSearch }) {\r\n  return (\r\n    <Input\r\n      size=\"large\"\r\n      placeholder=\"Input search text\"\r\n      onChange={handleSearch}\r\n      allowClear\r\n    />\r\n  );\r\n}\r\n","import { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Heading = ({ heading }) => <Title>{heading}</Title>;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { competitionsAction, teamsAction } from '../../store/actions';\r\nimport { CardMenu } from '../CardMenu';\r\nimport { CardListView } from './CardLisView';\r\nimport { SearchBox } from '../SearchBox';\r\nimport './CardList.css';\r\nimport { Heading } from '../Heading';\r\n\r\nexport function CardListBase() {\r\n  const { pathname } = useLocation();\r\n  const [heading, setHeading] = useState('');\r\n  const history = useHistory();\r\n  const [tab, setTab] = useState('competitions');\r\n  const [list, setList] = useState([...Array(8).keys()]);\r\n  const dispatch = useDispatch();\r\n  const { data, isFetching, loaded } = useSelector((s) => s[tab]);\r\n\r\n  useEffect(() => {\r\n    switch (pathname) {\r\n      case '/':\r\n        dispatch(competitionsAction.getCompetetionList());\r\n        setHeading('Competitions');\r\n        setTab('competitions');\r\n        break;\r\n\r\n      case '/teams':\r\n        dispatch(teamsAction.getTeamList());\r\n        setHeading('Teams');\r\n        setTab('teams');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [dispatch, pathname]);\r\n\r\n  useEffect(() => {\r\n    if (loaded) {\r\n      setList(data);\r\n    }\r\n  }, [data, loaded]);\r\n\r\n  function changeTab({ key }) {\r\n    switch (key) {\r\n      case 'competitions':\r\n        history.replace('/');\r\n        break;\r\n\r\n      case 'teams':\r\n        history.replace('/teams');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleClick = (code) => {\r\n    // remove the last character\r\n    history.push(`/${tab.slice(0, -1)}/${code}`);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const val = e.target.value.trim();\r\n\r\n    writeSearchValueInUrl(val);\r\n\r\n    if (!val.length) {\r\n      setList(data);\r\n      return;\r\n    }\r\n\r\n    const filteredData = data.filter((item) =>\r\n      RegExp(val, 'i').test(item.name + item.area.name)\r\n    );\r\n    setList(filteredData);\r\n  };\r\n\r\n  const writeSearchValueInUrl = (val) => {\r\n    const prefix = tab === 'teams' ? '/teams' : '';\r\n    val ? history.replace(`${prefix}?q=${val}`) : history.replace(prefix);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading heading={heading} />\r\n      <SearchBox handleSearch={handleSearch} />\r\n      <CardMenu tab={tab} changeTab={changeTab} />\r\n      <CardListView\r\n        tab={tab}\r\n        data={list}\r\n        loading={isFetching}\r\n        loaded={loaded}\r\n        onOpenCard={handleClick}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { PageContainer, Competition, Team, CardList } from './components';\r\nimport { Alert } from 'antd'\r\nconst { ErrorBoundary } = Alert;\r\n\r\nconst App = () => (\r\n  <PageContainer>\r\n    <ErrorBoundary>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={CardList}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/competition/:id/:tab?\"\r\n          component={Competition}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/teams\"\r\n          component={CardList}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/team/:id/:tab?\"\r\n          component={Team}\r\n        />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </ErrorBoundary>\r\n  </PageContainer>\r\n)\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { store } from './store/store'\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.REACT_APP_PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}